{"version":3,"file":"axios-shim.js","sources":["../src/index.mjs"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default (function create(defaults) {\n  defaults = defaults || {};\n\n  function createMethod(method, allowBody) {\n    return (url, config, alt) => {\n      let data;\n      if (allowBody && arguments.length > 2) {\n        data = config;\n        config = alt;\n      }\n      config = Object.assign({method}, config);\n      return axios(url, data, config);\n    };\n  }\n\n  axios.request = axios;\n  axios.get = createMethod('get', false);\n  axios.delete = createMethod('delete', false);\n  axios.options = createMethod('options', false);\n  axios.post = createMethod('post', true);\n  axios.put = createMethod('put', true);\n  axios.patch = createMethod('patch', true);\n\n  function deepMerge(opts, overrides, lowerCase) {\n    if (Array.isArray(opts)) {\n      return opts.concat(overrides);\n    }\n    if (overrides && typeof overrides == 'object') {\n      const out = {};\n      // const keys = {};\n      if (opts) {\n        for (let i in opts) {\n          // keys[i.toLowerCase()] = i;\n          // out[i] = opts[i];\n          out[i.toLowerCase()] = opts[i];\n        }\n      }\n      for (let i in overrides) {\n        // let key = keys[i.toLowerCase()] || i;\n        let key = lowerCase ? i.toLowerCase() : i;\n        if (key === 'headers') lowerCase = true;\n        if (i in out) {\n          out[i] = deepMerge(out[i], overrides[i], lowerCase);\n        } else {\n          out[i] = overrides[i];\n        }\n      }\n      return out;\n    }\n    return overrides;\n  }\n\n  /*\n  function extend(target, source, lowerCase) {\n    if (source) for (let i in source) {\n      let prop = lowerCase ? i.toLowerCase() : i;\n      target[prop] = source[i];\n    }\n    return target;\n  }\n  */\n\n  /*\n  function transform(stack, data, headers) {\n    for (let i=0, r; i<stack && stack.length || 0; i++) {\n      r = stack[i](data, headers);\n      if (r!==undefined) {\n        data = r;\n      }\n    }\n    return data;\n  }\n  */\n\n  // function qs(params) {\n  //   let out = '';\n  //   for (let i in params) {\n  //     if (out) out += '&';\n  //     out += encodeURIComponent(i);\n  //     out += '=';\n  //     out += encodeURIComponent(params[i]);\n  //   }\n  //   return out;\n  // }\n\n  function isOk(status) {\n    return status/100|0 === 2;\n  }\n\n  function axios(url, data, config) {\n    let options = config;\n    if (typeof url !== 'string') {\n      options = url;\n      url = options.url;\n    } else if (config === undefined) {\n      options = data;\n      data = undefined;\n    }\n    options = deepMerge(defaults, options) || {};\n\n    /*\n    config = config || {};\n    const headers = assign(\n      assign({}, defaults.headers, true),\n      config.headers,\n      true\n    );\n    const params = assign(\n      assign({}, defaults.params, false),\n      config.params,\n      false\n    );\n    */\n\n    /*\n    const headers = {};\n    if (defaults.headers) for (let i in defaults.headers) {\n      headers[i.toLowerCase()] = defaults.headers[i];\n    }\n    if (config.headers) for (let i in config.headers) {\n      headers[i.toLowerCase()] = config.headers[i];\n    }\n    */\n\n    // data = transform(defaults.transformRequest, data, headers);\n    // data = transform(config.transformRequest, data, headers);\n\n    if (options.transformRequest) {\n      for (let i = 0; i < options.transformRequest.length; i++) {\n        let r = stack[i](data, options.headers);\n        if (r !== undefined) {\n          data = r;\n        }\n      }\n    }\n\n    if (data && typeof data === 'object') {\n      data = JSON.stringify(data);\n      options.headers = deepMerge(options.headers, {\n        'Content-Type': 'application/json',\n      });\n    }\n\n    if (options.xsrfCookieName) {\n      let parts = document.cookie.split(/ *[;=] */);\n      for (let i = 0; i < parts.length; i += 2) {\n        if (parts[i] == options.xsrfCookieName) {\n          options.headers[options.xsrfHeaderName] = decodeURIComponent(parts[i+1]);\n          break;\n        }\n      }\n    }\n\n    const response = {\n      config,\n    };\n    return fetch(url, {\n      authorization: options.auth,\n      body: data,\n    }).then((res) => {\n      for (let i in res) {\n        if (typeof res[i] != 'function') response[i] = res[i];\n      }\n      if (!(options.validateStatus || isOk)(res.status)) {\n        return Promise.reject(res);\n      }\n      const withData = options.responseType === 'stream'\n        ? Promise.resolve(res.body)\n        : res[options.responseType || 'text']();\n      return withData.then((data) => {\n        response.data = data;\n        return response;\n      });\n    });\n  }\n\n  axios.CancelToken = self.AbortController || Object;\n\n  return axios;\n})();\n"],"names":["defaults","createMethod","method","allowBody","url","config","alt","data","arguments","length","axios","Object","assign","deepMerge","opts","overrides","lowerCase","Array","isArray","concat","out","let","i","toLowerCase","options","undefined","transformRequest","r","stack","headers","JSON","stringify","xsrfCookieName","parts","document","cookie","split","xsrfHeaderName","decodeURIComponent","response","fetch","authorization","auth","body","then","res","validateStatus","status","responseType","Promise","resolve","reject","request","get","delete","post","put","patch","CancelToken","self","AbortController"],"mappings":"+KAae,SAAiBA,YAGrBC,EAAaC,EAAQC,mCACpBC,EAAKC,EAAQC,OACfC,SACAJ,GAAaK,EAAUC,OAAS,IAClCF,EAAOF,EACPA,EAASC,GAGJI,EAAMN,EAAKG,EADlBF,EAASM,OAAOC,OAAO,QAACV,GAASG,cAa5BQ,EAAUC,EAAMC,EAAWC,MAC9BC,MAAMC,QAAQJ,UACTA,EAAKK,OAAOJ,MAEjBA,GAAiC,iBAAbA,EAAuB,KACvCK,EAAM,MAERN,MACGO,IAAIC,KAAKR,EAGZM,EAAIE,EAAEC,eAAiBT,EAAKQ,OAG3BD,IAAIC,KAAKP,EAGA,aADFC,EAAYM,EAAEC,cAAgBD,KACjBN,GAAY,GAEjCI,EAAIE,GADFA,KAAKF,EACEP,EAAUO,EAAIE,GAAIP,EAAUO,GAAIN,GAEhCD,EAAUO,UAGhBF,SAEFL,WAwCAL,EAAMN,EAAKG,EAAMF,OACpBmB,EAAUnB,KACK,iBAARD,EAETA,GADAoB,EAAUpB,GACIA,SACMqB,IAAXpB,IACTmB,EAAUjB,EACVA,OAAOkB,IAETD,EAAUX,EAAUb,EAAUwB,IAAY,IA6B9BE,qBACLL,IAAIC,EAAI,EAAGA,EAAIE,EAAQE,iBAAiBjB,OAAQa,IAAK,KACpDK,EAAIC,MAAMN,GAAGf,EAAMiB,EAAQK,cACrBJ,IAANE,IACFpB,EAAOoB,MAKTpB,GAAwB,iBAATA,IACjBA,EAAOuB,KAAKC,UAAUxB,GACtBiB,EAAQK,QAAUhB,EAAUW,EAAQK,QAAS,gBAC3B,sBAIhBL,EAAQQ,uBACNC,EAAQC,SAASC,OAAOC,MAAM,YACzBd,EAAI,EAAGA,EAAIW,EAAMxB,OAAQa,GAAK,KACjCW,EAAMX,IAAME,EAAQQ,eAAgB,CACtCR,EAAQK,QAAQL,EAAQa,gBAAkBC,mBAAmBL,EAAMX,EAAE,cAMrEiB,EAAW,QACflC,UAEKmC,MAAMpC,EAAK,CAChBqC,cAAejB,EAAQkB,KACvBC,KAAMpC,IACLqC,cAAMC,OACFxB,IAAIC,KAAKuB,EACS,mBAAVA,EAAIvB,KAAkBiB,EAASjB,GAAKuB,EAAIvB,WAE/CE,EAAQsB,yBA9EJC,UACLA,EAAO,KAAI,IA6EsBF,EAAIE,SAGA,WAAzBvB,EAAQwB,aACrBC,QAAQC,QAAQL,EAAIF,MACpBE,EAAIrB,EAAQwB,cAAgB,WAChBJ,cAAMrC,UACpBgC,EAAShC,KAAOA,EACTgC,IAPAU,QAAQE,OAAON,YAnK5B7C,EAAWA,GAAY,GAcvBU,EAAM0C,QAAU1C,EAChBA,EAAM2C,IAAMpD,EAAa,OAAO,GAChCS,EAAM4C,OAASrD,EAAa,UAAU,GACtCS,EAAMc,QAAUvB,EAAa,WAAW,GACxCS,EAAM6C,KAAOtD,EAAa,QAAQ,GAClCS,EAAM8C,IAAMvD,EAAa,OAAO,GAChCS,EAAM+C,MAAQxD,EAAa,SAAS,GA2JpCS,EAAMgD,YAAcC,KAAKC,iBAAmBjD,OAErCD,EAlLM"}